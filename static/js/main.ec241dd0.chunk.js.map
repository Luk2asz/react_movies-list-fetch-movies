{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","isLoadingClass","value","cn","FindMovie","handleSetQuery","query","findMovie","canNotFind","handleCanNotFind","isLoading","handleSetMovies","_Fragment","htmlFor","type","id","placeholder","onChange","event","target","disabled","length","onClick","e","preventDefault","getMovie","fetch","concat","then","res","json","catch","Response","Error","App","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","movieData","setMovieData","_useState5","_useState6","setMovie","_useState7","_useState8","setQuery","_useState9","_useState10","setCanNotFind","_useState11","_useState12","setIsLoading","useEffect","undefined","Title","Plot","imdbID","Poster","_fetchMovie","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","sent","finish","stop","apply","arguments","fetchMovie","oneMovie","allMovies","find","mv","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec241dd0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie | undefined\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie && movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">\n            {movie && movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie && movie.description}\n        <br />\n        <a href={movie && movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie | undefined;\n  handleSetQuery: (value: string) => void;\n  query: string;\n  findMovie: (value: string) => void;\n  canNotFind: boolean;\n  handleCanNotFind: (value: boolean) => void;\n  isLoading: boolean;\n  handleSetMovies: (oneMovie: Movie, allMovies: Movie[]) => void;\n  movies: Movie[];\n};\n\nconst isLoadingClass = (value: boolean) => cn(\n  'button is-light',\n  { 'is-loading': value === true },\n);\n\nconst isDangerClass = (value: boolean) => cn(\n  'input',\n  { 'is-danger': value === true },\n);\n\nexport const FindMovie: React.FC<Props> = ({\n  movie,\n  handleSetQuery,\n  query,\n  findMovie,\n  canNotFind,\n  handleCanNotFind,\n  isLoading,\n  handleSetMovies,\n  movies,\n}) => {\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={isDangerClass(canNotFind)}\n              value={query}\n              onChange={(event) => {\n                handleSetQuery(event.target.value);\n                handleCanNotFind(false);\n              }}\n            />\n          </div>\n\n          {canNotFind && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={isLoadingClass(isLoading)}\n              disabled={query.length === 0}\n              onClick={\n                (e) => {\n                  e.preventDefault();\n                  findMovie(query);\n                }\n              }\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleSetMovies(movie, movies)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nexport const API_URL = 'https://www.omdbapi.com/?apikey=f4e715f7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movieData, setMovieData] = useState<MovieData | ResponseError>();\n  const [movie, setMovie] = useState<Movie | undefined>();\n  const [query, setQuery] = useState('');\n  const [canNotFind, setCanNotFind] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSetQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleCanNotFind = (value: boolean) => {\n    setCanNotFind(value);\n  };\n\n  const handleSetMovies = (oneMovie: Movie, allMovies: Movie[]) => {\n    if (!allMovies.find(mv => mv.imdbId === oneMovie.imdbId)) {\n      setMovies(allMovies.concat(oneMovie));\n    }\n\n    setMovie(undefined);\n    setQuery('');\n  };\n\n  const findMovie = (value: string) => {\n    async function fetchMovie() {\n      setIsLoading(true);\n      try {\n        const data = await getMovie(value);\n\n        if ('Title' in data) {\n          setMovieData(data);\n        } else {\n          setCanNotFind(true);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  };\n\n  useEffect(() => {\n    if (movieData !== undefined && 'Title' in movieData) {\n      setMovie(\n        {\n          title: movieData.Title,\n          description: movieData.Plot,\n          imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n          imgUrl: movieData.Poster !== 'N/A'\n            ? movieData.Poster\n            : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbId: movieData.imdbID,\n        },\n      );\n    }\n  }, [movieData]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={movie}\n          handleSetQuery={handleSetQuery}\n          query={query}\n          findMovie={findMovie}\n          canNotFind={canNotFind}\n          handleCanNotFind={handleCanNotFind}\n          isLoading={isLoading}\n          handleSetMovies={handleSetMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}